# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
attached_assets/*.env
*.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore the entire .idea directory.
.idea/

# VS Code
.vscode/

# Market Manus specific files
# Logs
*.log
logs/
market_manus_complete.log

# Reports and generated data
reports/*.json
reports/*.csv
reports/*.txt
!reports/.gitkeep
!reports/README.md

# Configuration files with sensitive data
config/capital_config.json
config/api_keys.json
config/user_settings.json
!config/settings.json

# Strategy Lab generated files
market_manus/strategy_lab/config/selected_assets.json
market_manus/strategy_lab/results/
market_manus/strategy_lab/cache/

# Temporary files
*.tmp
*.temp
temp/
tmp/

# Backup files
*.bak
*.backup
*_backup.*
*_old.*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
desktop.ini

# Linux
*~

# Market data cache
data/cache/
data/historical/
data/temp/

# Export files
exports/
*.xlsx
*.xls

# Docker
.dockerignore
Dockerfile
docker-compose.yml
docker-compose.*.yml

# Kubernetes
k8s/
*.yaml
*.yml
!.github/workflows/*.yml
!.pre-commit-config.yaml

# Monitoring
monitoring/
prometheus.yml
grafana/

# Scripts (keep only essential ones)
scripts/backup.*
scripts/deploy.*
scripts/monitor.*
scripts/optimize.*

# Development tools
.pre-commit-config.yaml.bak
.flake8.bak
.mypy.ini.bak

# API keys and secrets (extra protection)
*api_key*
*api_secret*
*token*
*secret*
*password*
!requirements.txt
!*example*
!*template*

# Performance profiling
*.prof
*.profile
profiling/

# Machine learning models
models/
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5

# Jupyter notebooks (if any)
*.ipynb

# Local development
local/
dev/
development/

# Testing artifacts
.coverage.*
coverage/
test-results/
test-reports/

# Documentation builds
docs/build/
docs/_build/
site/
