[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "market-manus"
version = "2.1.0"
description = "Sistema profissional de trading automatizado com IA integrada"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Esdras Trade", email = "esdrastrade@gmail.com"}
]
maintainers = [
    {name = "Esdras Trade", email = "esdrastrade@gmail.com"}
]
keywords = [
    "trading",
    "cryptocurrency",
    "algorithmic-trading",
    "bybit",
    "technical-analysis",
    "machine-learning",
    "scalping",
    "strategy-lab"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
requires-python = ">=3.11"
dependencies = [
    "requests>=2.31.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "python-dotenv>=1.0.0",
    "colorama>=0.4.6",
    "tabulate>=0.9.0",
    "websocket-client>=1.6.0",
    "cryptography>=41.0.0",
    "pydantic>=2.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "bandit>=1.7.5"
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0"
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.1.0",
    "mkdocstrings>=0.22.0"
]

[project.urls]
Homepage = "https://github.com/esdrastrade/Market_Manus"
Repository = "https://github.com/esdrastrade/Market_Manus"
Documentation = "https://github.com/esdrastrade/Market_Manus#readme"
"Bug Tracker" = "https://github.com/esdrastrade/Market_Manus/issues"

[project.scripts]
market-manus = "market_manus.cli.market_manus_cli_complete_final:MarketManusCompleteCLI.run"
market-manus-cli = "market_manus.cli.market_manus_cli_complete_final:MarketManusCompleteCLI.run"

[tool.setuptools.packages.find]
where = ["."]
include = ["market_manus*"]
exclude = ["tests*", "docs*", "reports*", "logs*"]

[tool.setuptools.package-data]
market_manus = ["*.json", "*.yaml", "*.yml"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=market_manus",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "api: Tests that require API access",
    "live: Tests that require live market data"
]

[tool.coverage.run]
source = ["market_manus"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | htmlcov
  | logs
  | reports
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["market_manus"]
skip_glob = ["*/migrations/*", "*/venv/*", "*/env/*"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".env",
    "logs",
    "reports"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "tests/",
    "build/",
    "dist/",
    "logs/",
    "reports/"
]

[tool.bandit]
exclude_dirs = ["tests", "logs", "reports"]
skips = ["B101", "B601"]
